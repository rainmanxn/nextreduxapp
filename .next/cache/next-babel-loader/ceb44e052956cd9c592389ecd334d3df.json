{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/developing/workPreparing/mynextredux/components/Counter.js\";\nvar __jsx = React.createElement;\n// import React, {useState} from \"react\";\n//\n// const Counter = () => {\n//   const [counter, setCounter] = useState(0)\n//   const increment = () => {\n//     setCounter((counter + 1))\n//   }\n//   const decrement = () => {\n//     setCounter(counter - 1)\n//   }\n//\n//   return (\n//     <>\n//       <h1>{counter}</h1>\n//       <button onClick={decrement}>-</button>\n//       <button onClick={increment}>+</button>\n//     </>\n//   )\n// }\n//\n// export default Counter\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { decrementCounter, incrementCounter } from '../redux/actions/counterActions';\n\nclass App extends React.Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, __jsx(\"button\", {\n      onClick: this.props.incrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Increment\"), __jsx(\"button\", {\n      onClick: this.props.decrementCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, \"Decrement\"), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, this.props.counter));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  counter: state.counter.value\n});\n\nconst mapDispatchToProps = {\n  incrementCounter: incrementCounter,\n  decrementCounter: decrementCounter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/user/Documents/developing/workPreparing/mynextredux/components/Counter.js"],"names":["React","connect","decrementCounter","incrementCounter","App","Component","getInitialProps","store","constructor","props","render","counter","mapStateToProps","state","value","mapDispatchToProps"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,gBAAR,EAA0BC,gBAA1B,QAAiD,iCAAjD;;AAEA,MAAMC,GAAN,SAAkBJ,KAAK,CAACK,SAAxB,CAAkC;AAEhC,SAAOC,eAAP,CAAuB;AAACC,IAAAA;AAAD,GAAvB,EAAgC,CAAE;;AAElCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKD,KAAL,CAAWN,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKM,KAAL,CAAWP,gBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKO,KAAL,CAAWE,OAAhB,CAHF,CADF;AAOD;;AAhB+B;;AAmBlC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcG;AADS,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAG;AACzBZ,EAAAA,gBAAgB,EAAEA,gBADO;AAEzBD,EAAAA,gBAAgB,EAAEA;AAFO,CAA3B;AAIA,eAAeD,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CX,GAA7C,CAAf","sourcesContent":["// import React, {useState} from \"react\";\n//\n// const Counter = () => {\n//   const [counter, setCounter] = useState(0)\n//   const increment = () => {\n//     setCounter((counter + 1))\n//   }\n//   const decrement = () => {\n//     setCounter(counter - 1)\n//   }\n//\n//   return (\n//     <>\n//       <h1>{counter}</h1>\n//       <button onClick={decrement}>-</button>\n//       <button onClick={increment}>+</button>\n//     </>\n//   )\n// }\n//\n// export default Counter\n\nimport React from 'react';\nimport {connect} from 'react-redux';\nimport {decrementCounter, incrementCounter} from '../redux/actions/counterActions';\n\nclass App extends React.Component {\n\n  static getInitialProps({store}) {}\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.props.incrementCounter}>Increment</button>\n        <button onClick={this.props.decrementCounter}>Decrement</button>\n        <h1>{this.props.counter}</h1>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  counter: state.counter.value\n});\n\nconst mapDispatchToProps = {\n  incrementCounter: incrementCounter,\n  decrementCounter: decrementCounter,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}