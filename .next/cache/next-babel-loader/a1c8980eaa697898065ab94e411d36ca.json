{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/developing/workPreparing/mynextredux/pages/_app.jsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport { createWrapper } from \"next-redux-wrapper\";\nimport store from '../redux/store';\nimport { createStore } from \"redux\";\nimport rootReducer from \"../redux/reducers/rootReducer\";\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  return __jsx(Provider, {\n    store: store,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })));\n};\n\nMyApp.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const pageProps = await App.getInitialProps(appContext);\n  return {\n    pageProps\n  };\n}; //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; // const makeStore = context => createStore(rootReducer);\n// export an assembled wrapper\n\n\nconst wrapper = createWrapper(makeStore, {\n  debug: true\n}); //withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\n\nexport default wrapper.withRedux(MyApp);","map":{"version":3,"sources":["/Users/user/Documents/developing/workPreparing/mynextredux/pages/_app.jsx"],"names":["App","Provider","React","createWrapper","store","createStore","rootReducer","MyApp","Component","pageProps","getInitialProps","appContext","makeStore","wrapper","debug","withRedux"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AACpC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAKP,CAND;;AAQAF,KAAK,CAACG,eAAN,GAAwB,MAAOC,UAAP,IAAsB;AAC5C;AACA,QAAMF,SAAS,GAAG,MAAMT,GAAG,CAACU,eAAJ,CAAoBC,UAApB,CAAxB;AAEA,SAAO;AAAEF,IAAAA;AAAF,GAAP;AACD,CALD,C,CASA;;;AACA,MAAMG,SAAS,GAAG,MAAMR,KAAxB,C,CACA;AAEA;;;AACA,MAAMS,OAAO,GAAGV,aAAa,CAACS,SAAD,EAAY;AAACE,EAAAA,KAAK,EAAE;AAAR,CAAZ,CAA7B,C,CACA;AACA;;AACA,eAAeD,OAAO,CAACE,SAAR,CAAkBR,KAAlB,CAAf","sourcesContent":["import App from 'next/app';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport {createWrapper} from \"next-redux-wrapper\";\nimport store from '../redux/store';\nimport {createStore} from \"redux\";\nimport rootReducer from \"../redux/reducers/rootReducer\";\n\nconst MyApp = ({ Component, pageProps }) => {\n        return (\n            <Provider store={store}>\n                <Component {...pageProps}/>\n            </Provider>\n        );\n}\n\nMyApp.getInitialProps = async (appContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const pageProps = await App.getInitialProps(appContext);\n\n  return { pageProps}\n}\n\n\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\n// const makeStore = context => createStore(rootReducer);\n\n// export an assembled wrapper\nconst wrapper = createWrapper(makeStore, {debug: true});\n//withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\nexport default wrapper.withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}