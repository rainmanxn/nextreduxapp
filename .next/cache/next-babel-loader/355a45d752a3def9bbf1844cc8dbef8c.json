{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/user/Documents/developing/workPreparing/mynextredux/pages/_app.jsx\";\n\nvar __jsx = React.createElement;\nimport App from 'next/app';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport { createWrapper } from \"next-redux-wrapper\";\nimport store from '../redux/store';\nimport { createStore } from \"redux\";\nimport rootReducer from \"../redux/reducers/rootReducer\";\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n  return __jsx(Provider, {\n    store: store,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, __jsx(Component, _extends({}, pageProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  })));\n};\n\n_c = MyApp;\n\nMyApp.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var pageProps;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            pageProps = _context.sent;\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); //makeStore function that returns a new store for every request\n\n\nvar makeStore = function makeStore() {\n  return store;\n}; // const makeStore = context => createStore(rootReducer);\n// export an assembled wrapper\n\n\nvar wrapper = createWrapper(makeStore, {\n  debug: true\n}); //withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\n\nexport default _c2 = wrapper.withRedux(MyApp);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyApp\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/user/Documents/developing/workPreparing/mynextredux/pages/_app.jsx"],"names":["App","Provider","React","createWrapper","store","createStore","rootReducer","MyApp","Component","pageProps","getInitialProps","appContext","makeStore","wrapper","debug","withRedux"],"mappings":";;;;;;;;AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA8B;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;AACpC,SACI,MAAC,QAAD;AAAU,IAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD,eAAeK,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,CADJ;AAKP,CAND;;KAAMF,K;;AAQNA,KAAK,CAACG,eAAN;AAAA,uEAAwB,iBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEX,GAAG,CAACU,eAAJ,CAAoBC,UAApB,CAFF;;AAAA;AAEhBF,YAAAA,SAFgB;AAAA,6CAIf;AAAEA,cAAAA,SAAS,EAATA;AAAF,aAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxB;;AAAA;AAAA;AAAA;AAAA,I,CASA;;;AACA,IAAMG,SAAS,GAAG,SAAZA,SAAY;AAAA,SAAMR,KAAN;AAAA,CAAlB,C,CACA;AAEA;;;AACA,IAAMS,OAAO,GAAGV,aAAa,CAACS,SAAD,EAAY;AAACE,EAAAA,KAAK,EAAE;AAAR,CAAZ,CAA7B,C,CACA;AACA;;AACA,qBAAeD,OAAO,CAACE,SAAR,CAAkBR,KAAlB,CAAf","sourcesContent":["import App from 'next/app';\nimport {Provider} from 'react-redux';\nimport React from 'react';\nimport {createWrapper} from \"next-redux-wrapper\";\nimport store from '../redux/store';\nimport {createStore} from \"redux\";\nimport rootReducer from \"../redux/reducers/rootReducer\";\n\nconst MyApp = ({ Component, pageProps }) => {\n        return (\n            <Provider store={store}>\n                <Component {...pageProps}/>\n            </Provider>\n        );\n}\n\nMyApp.getInitialProps = async (appContext) => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  const pageProps = await App.getInitialProps(appContext);\n\n  return { pageProps}\n}\n\n\n\n//makeStore function that returns a new store for every request\nconst makeStore = () => store;\n// const makeStore = context => createStore(rootReducer);\n\n// export an assembled wrapper\nconst wrapper = createWrapper(makeStore, {debug: true});\n//withRedux wrapper that passes the store to the App Component\n// export default withRedux(makeStore)(MyApp);\nexport default wrapper.withRedux(MyApp);\n"]},"metadata":{},"sourceType":"module"}