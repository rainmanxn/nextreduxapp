{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/user/Documents/developing/workPreparing/mynextredux/components/Counter.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n\nvar Counter = function Counter(_ref) {\n  _s();\n\n  var count = _ref.count;\n  console.log(count);\n\n  var _useState = useState(0),\n      counter = _useState[0],\n      setCounter = _useState[1];\n\n  var increment = function increment() {\n    setCounter(counter + 1);\n  };\n\n  var decrement = function decrement() {\n    setCounter(counter - 1);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, counter), __jsx(\"button\", {\n    onClick: decrement,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"-\"), __jsx(\"button\", {\n    onClick: increment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, \"+\"));\n};\n\n_s(Counter, \"mgO7WMHyhiBnLtH7uw/qAj2Cy9A=\");\n\n_c = Counter;\n\nCounter.getInitialProps = function () {\n  var count = 0;\n\n  if (localStorage.getItem('counter')) {\n    count = localStorage.getItem('counter');\n  }\n\n  console.log(count);\n  return {\n    count: count\n  };\n};\n\nexport default Counter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counter\");","map":{"version":3,"sources":["/Users/user/Documents/developing/workPreparing/mynextredux/components/Counter.js"],"names":["React","useState","Counter","count","console","log","counter","setCounter","increment","decrement","getInitialProps","localStorage","getItem"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA;;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAD2B,kBAEGF,QAAQ,CAAC,CAAD,CAFX;AAAA,MAEpBK,OAFoB;AAAA,MAEXC,UAFW;;AAG3B,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBD,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAGA,MAAMG,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBF,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACD,GAFD;;AAIA,SACE,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,OAAL,CADF,EAEE;AAAQ,IAAA,OAAO,EAAEG,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,EAGE;AAAQ,IAAA,OAAO,EAAED,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHF,CADF;AAOD,CAjBD;;GAAMN,O;;KAAAA,O;;AAmBNA,OAAO,CAACQ,eAAR,GAA0B,YAAM;AAC9B,MAAIP,KAAK,GAAG,CAAZ;;AACA,MAAIQ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnCT,IAAAA,KAAK,GAAGQ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAR;AACD;;AACDR,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,SAAO;AAACA,IAAAA,KAAK,EAALA;AAAD,GAAP;AACD,CAPD;;AASA,eAAeD,OAAf","sourcesContent":["import React, {useState} from \"react\";\n\nconst Counter = ({count}) => {\n  console.log(count)\n  const [counter, setCounter] = useState(0)\n  const increment = () => {\n    setCounter(counter + 1)\n  }\n  const decrement = () => {\n    setCounter(counter - 1)\n  }\n\n  return (\n    <>\n      <h1>{counter}</h1>\n      <button onClick={decrement}>-</button>\n      <button onClick={increment}>+</button>\n    </>\n  )\n}\n\nCounter.getInitialProps = () => {\n  let count = 0;\n  if (localStorage.getItem('counter')) {\n    count = localStorage.getItem('counter')\n  }\n  console.log(count)\n  return {count}\n}\n\nexport default Counter\n"]},"metadata":{},"sourceType":"module"}